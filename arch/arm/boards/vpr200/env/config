#!/bin/sh
machine=vpr200v2

# use 'dhcp' to do dhcp in barebox and in kernel
# use 'none' if you don't want to pass the ip from barebox to the kernel
ip=none

# or set your networking parameters here
#eth0.ipaddr=10.1.40.90
#eth0.netmask=255.255.255.0
#eth0.gateway=a.b.c.d
#eth0.serverip=10.1.40.110

# can be either 'net', 'nor', 'nand' or 'mmc'
kernel_loc=nor
rootfs_loc=nand

# 'ubifs' for flash, 'ext3' for mmc
rootfs_type=ubifs

#
# only when booting from mmc do we allow the barebox or kernel partitions to
# be writeable.
#
if [ x$barebox_loc = xmmc ]; then
	kernel_loc=mmc
	rootfs_loc=mmc
	rootfs_type=ext3
else
	nor_perm=ro
fi

kernelimage=uImage
rootfs=vpr200v2-rootfs
envimage=vpr200v2-env

autoboot_timeout=6

nfsroot="/srv/nfs/vpr200/v2"
serconsoleargs="console=ttymxc0,115200"
consoleargs="quiet"
debugargs="jtag=on nohlt debug earlyprintk=ttymxc0,115200"
bootargs="lpj=2658304"

# include g_ether parameters
. /env/geconf

nor_parts="512k(barebox)$nor_perm,512k(bareboxenv)$nor_perm,4M(kernel)$nor_perm,-(scratch)"
rootfs_mtdblock_nor=3

nand_parts="200M(rootfs),-(data)"
ubi_rootfs_part="ubi.mtd=4"

# extra ubi partitions that get mounted automatically
# part 5 is data partition
ubi_data_part="ubi.mtd=5"

#note: these are fake partitions before the first real partition on 
#on the card. They are purely for the bootloader.
mmc_boot_parts="512k(barebox)ro,512k(bareboxenv),4M(kernel)"
# the second real partition is our boot partition.
# (the first is a FAT filesystem that can hold system update files)
rootfs_mmc_part=2

# example for dev debug query
#battdebug='ddebug_query="file mc13xxx_batttery.c +p"'
